<div class="page-fold">
	<div class="row">
		<section>
			<div class="dash">
				<div class="pt-bold" id="dash-title">
					<span>Dashboard</span>
				</div>
				<div class="first">
					<div>
						<div>
						<span class="dash-descrip">Total Unique Individuals this Month</span>
						</div>
						<div>
						<span class="dash-num pt-large"><%= @month_scans_uniq %></span>
						</div>
					</div>
		
				</div>
				<div class="second">
					<div>
						<div>
						<span class="dash-descrip">Total Scans this Month</span>
						</div>
						<div><span class="dash-num pt-large"><%= @month_scans.count %></span></div>
						<!-- <div class="green-arrow"></div> -->
					</div>
				</div>
			</div>
			<!-- End of Dash -->
			<% if @departments %>	
					<% if @departments.count > 1 %>
						
							<div class="centered">
							
								<h1>View a department's events</h1>
								<section class="sw-table">
									<div>
									  <!-- Download: -->
									</div>
									<table border="1">
									<tr>
									<th>Department Name</th>
									<!-- <th>Total Attendees</th>
									<th>Unique Attendees</th>
									<th>Event Date</th> -->
									</tr>
									<% @departments.each do |d| %>
										<tr>
										<td><%= link_to d.name, controller: "departments", action: "show", id: d.id %></td>
			
					
										</tr>
								   	 <% end %>
									</table>
								</section>
								<!-- <svg class="chart"> -->
			
								<!-- </svg> -->
							</div>
							
						<% else %>
						
						<% end %>
			<% elsif @department %>
			
				<div class="centered">
					<section>
						<h1><%= @department.name %></h1>
					</section>
					<section class="sw-table">
						<div>
							<% if current_user %>
							
							  Download:
							  <%= link_to "Excel", accounts_path(format: "xls", department_id: @department.id  ) %>
						 	 <% end %>
						</div>
						<table border="1">
						<tr>
						<th>Event Title</th>
						<th>Total Attendees</th>
						<th>Unique Attendees</th>
						<th>Event Date</th>
						</tr>
						<% @events.each do |e| %>
							<tr>
							<td><%= link_to e.name, controller: "events", action: "show", id: e.id %></td>
							<% event_scans = @scans.select{ |s| s.event_id == e.id } %>

							<td><%= event_scans.size %></td>
							<td><%= event_scans.uniq{ |es| es.value }.size %></td>
							<td><%= l e.starts_at, :format => :short %></td>
							</tr>
					   	 <% end %>
						</table>
					</section>
				</div>
			<% end %>
			<!-- </div> -->
			</section>
			<!-- // <script type="text/javascript">
// 			 var scans = 6;
// 
// 			 console.log(scans);
// 
// 
// 			//Width and height
// 						var w = 600;
// 						var h = 250;
// 			
// 						var dataset = [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13,
// 										11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];
// 
// 						var xScale = d3.scale.ordinal()
// 										.domain(d3.range(dataset.length))
// 										.rangeRoundBands([0, w], 0.05);
// 
// 						var yScale = d3.scale.linear()
// 										.domain([0, d3.max(dataset)])
// 										.range([0, h]);
// 			
// 						//Create SVG element
// 						var svg = d3.select("svg")
// 									.attr("width", w)
// 									.attr("height", h);
// 
// 						//Create bars
// 						svg.selectAll("rect")
// 						   .data(dataset)
// 						   .enter()
// 						   .append("rect")
// 						   .attr("x", function(d, i) {
// 						   		return xScale(i);
// 						   })
// 						   .attr("y", function(d) {
// 						   		return h - yScale(d);
// 						   })
// 						   .attr("width", xScale.rangeBand())
// 						   .attr("height", function(d) {
// 						   		return yScale(d);
// 						   })
// 						   .attr("fill", function(d) {
// 								return "rgb(0, 0, " + (d * 10) + ")";
// 						   });
// 
// 						//Create labels
// 						svg.selectAll("text")
// 						   .data(dataset)
// 						   .enter()
// 						   .append("text")
// 						   .text(function(d) {
// 						   		return d;
// 						   })
// 						   .attr("text-anchor", "middle")
// 						   .attr("x", function(d, i) {
// 						   		return xScale(i) + xScale.rangeBand() / 2;
// 						   })
// 						   .attr("y", function(d) {
// 						   		return h - yScale(d) + 14;
// 						   })
// 						   .attr("font-family", "sans-serif")
// 						   .attr("font-size", "11px")
// 						   .attr("fill", "white");
// 			
// 			
// 
// 
// 			// var dataset = [
// // 			                [5, 20], [480, 90], [250, 50], [100, 33], [330, 95],
// // 			                [410, 12], [475, 44], [25, 67], [85, 21], [220, 88]
// // 			              ];
// // 			//Width and height
// // 			var w = 500;
// // 			var h = 100;
// // 			var barPadding = 1;  // <-- New!
// // 			
// // 			var svg = d3.select("svg").attr("width", w).attr("height", h);
// // 			
// // 			svg.selectAll("circle")
// // 			.data(dataset)
// // 			.enter()
// // 			.append("circle")
// // 			.attr("cx", function(d) {
// // 			        return d[0];
// // 			   })
// // 		   .attr("cy", function(d) {
// // 		        return d[1];
// // 		   })
// // 		   .attr("r", function(d) {
// // 		       return Math.sqrt(h - d[1]);
// // 		   });
// // 			
// 			// svg.selectAll("rect")
// // 			.data(dataset)
// // 			.enter()
// // 			.append("rect")
// // 			.attr("x", function(d, i) {
// // 				return i * (w / dataset.length);
// // 			})
// // 			.attr("y", function(d) {
// // 				return h - (d * 4);
// // 			})
// // 			.attr("width", w / dataset.length - barPadding)
// // 			.attr("height", function(d) {
// // 			    return d * 4;
// // 			})
// // 			.attr("fill", function(d) {
// // 			    return "rgb(0, 0, " + (d * 10) + ")";
// // 			});
// // 			
// // 			svg.selectAll("text")
// // 			   .data(dataset)
// // 			   .enter()
// // 			   .append("text")
// // 			   .text(function(d) {
// // 			          return d;
// // 			     })
// // 			 .attr("x", function(d, i) {
// // 			         return i * (w / dataset.length) + (w / dataset.length - barPadding) / 2;
// // 			    })
// // 			    .attr("y", function(d) {
// // 			         return h - (d * 4) + 14;
// // 			    })
// // 				.attr("font-size", "16px")
// // 				.attr("fill", "white")
// // 				.attr("text-anchor", "middle");
// // 			
// 			
// 			// var svg = d3.select("svg")
// // 			            .attr("width", w)   // <-- Here
// // 			            .attr("height", h); // <-- and here!
// // 
// // 			var circles = svg.selectAll("circle")
// // 			                 .data(dataset)
// // 			                 .enter()
// // 			                 .append("circle");
// // 			 circles.attr("cx", function(d, i) {
// // 			             return (i * 50) + 25;
// // 			         })
// // 			        .attr("cy", h/2)
// // 			        .attr("r", function(d) {
// // 			             return d;
// // 			        })
// // 					.attr("fill", "yellow")
// // 					.attr("stroke", "orange")
// // 					.attr("stroke-width", function(d) {
// // 					    return d/2;
// // 					});;
// // 			</script>
// 			<style>
// 			rect:hover {
// 							fill: orange;
// 						}
// 						fi
// 				div.bar {
// 				    display: inline-block;
// 				    width: 20px;
// 				    height: 75px;   /* We'll override this later */
// 				    background-color: teal;
// 					margin-right: 2px;
// 				}
// 			</style> -->
		</div>
	</div>
</div>